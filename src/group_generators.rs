use crate::one_line::*;

pub(crate) const SUPER_PERM6: [u8; 872] = [1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 1, 6, 2, 3, 4, 5, 1, 2, 6, 3, 4, 5, 1, 2, 3, 6, 4, 5, 1, 3, 2, 6, 4, 5, 1, 3, 6, 2, 4, 5, 1, 3, 6, 4, 2, 5, 1, 3, 6, 4, 5, 2, 1, 3, 6, 4, 5, 1, 2, 3, 4, 6, 5, 1, 2, 3, 4, 1, 5, 6, 2, 3, 4, 1, 5, 2, 6, 3, 4, 1, 5, 2, 3, 6, 4, 1, 5, 2, 3, 4, 6, 1, 5, 2, 3, 4, 1, 6, 5, 2, 3, 4, 1, 2, 5, 6, 3, 4, 1, 2, 5, 3, 6, 4, 1, 2, 5, 3, 4, 6, 1, 2, 5, 3, 4, 1, 6, 2, 5, 3, 4, 1, 2, 6, 5, 3, 4, 1, 2, 3, 5, 6, 4, 1, 2, 3, 5, 4, 6, 1, 2, 3, 5, 4, 1, 6, 2, 3, 5, 4, 1, 2, 6, 3, 5, 4, 1, 2, 3, 6, 5, 4, 1, 3, 2, 6, 5, 4, 3, 1, 2, 6, 4, 5, 3, 1, 6, 2, 4, 3, 5, 1, 6, 2, 4, 3, 1, 5, 6, 2, 4, 3, 1, 6, 5, 2, 4, 3, 1, 6, 2, 5, 4, 3, 1, 6, 2, 4, 5, 3, 1, 6, 4, 2, 5, 3, 1, 4, 6, 2, 5, 3, 1, 4, 2, 6, 5, 3, 1, 4, 2, 5, 6, 3, 1, 4, 2, 5, 3, 6, 1, 4, 2, 5, 3, 1, 6, 4, 5, 2, 3, 1, 4, 6, 5, 2, 3, 1, 4, 5, 6, 2, 3, 1, 4, 5, 2, 6, 3, 1, 4, 5, 2, 3, 6, 1, 4, 5, 2, 3, 1, 6, 4, 5, 3, 2, 1, 6, 4, 5, 3, 1, 2, 6, 4, 3, 5, 1, 2, 6, 4, 3, 1, 5, 2, 6, 4, 3, 1, 2, 5, 6, 4, 3, 2, 1, 5, 6, 4, 2, 3, 1, 5, 4, 6, 2, 3, 1, 5, 4, 2, 6, 3, 1, 5, 4, 2, 3, 6, 1, 5, 4, 2, 3, 1, 6, 5, 4, 2, 3, 1, 5, 6, 4, 2, 1, 3, 5, 6, 4, 2, 1, 5, 3, 6, 2, 4, 1, 5, 3, 6, 2, 1, 4, 5, 3, 6, 2, 1, 5, 4, 3, 6, 2, 1, 5, 3, 4, 6, 2, 1, 3, 5, 4, 6, 2, 1, 3, 4, 5, 6, 2, 1, 3, 4, 6, 5, 2, 1, 3, 4, 6, 2, 5, 1, 3, 4, 6, 2, 1, 5, 3, 6, 4, 2, 1, 5, 6, 3, 4, 2, 1, 6, 5, 3, 4, 2, 1, 6, 3, 5, 4, 2, 1, 6, 3, 4, 5, 2, 1, 6, 3, 4, 2, 5, 1, 6, 3, 4, 2, 1, 5, 6, 4, 3, 2, 5, 1, 6, 4, 3, 2, 5, 6, 1, 4, 3, 2, 5, 6, 4, 1, 3, 2, 5, 6, 4, 3, 1, 2, 6, 5, 4, 3, 2, 1, 6, 5, 4, 3, 2, 6, 1, 5, 3, 4, 2, 6, 1, 3, 5, 4, 2, 6, 1, 3, 4, 5, 2, 6, 1, 3, 4, 2, 5, 6, 1, 3, 4, 2, 6, 5, 1, 3, 4, 2, 6, 1, 5, 3, 2, 4, 6, 5, 1, 3, 2, 4, 6, 5, 3, 1, 2, 4, 6, 3, 5, 1, 2, 4, 6, 3, 1, 5, 2, 4, 6, 3, 1, 2, 5, 4, 6, 3, 2, 1, 5, 4, 6, 3, 2, 5, 1, 4, 6, 3, 2, 5, 4, 1, 6, 3, 2, 5, 4, 6, 1, 3, 2, 5, 4, 6, 3, 1, 2, 4, 5, 6, 3, 2, 1, 4, 5, 6, 3, 2, 4, 1, 5, 6, 3, 2, 4, 5, 1, 6, 3, 2, 4, 5, 6, 1, 3, 2, 4, 5, 6, 3, 1, 2, 4, 6, 5, 3, 2, 1, 4, 6, 5, 3, 2, 4, 1, 6, 5, 3, 2, 4, 6, 1, 5, 3, 2, 6, 4, 1, 5, 3, 2, 6, 1, 4, 5, 3, 2, 6, 1, 5, 4, 3, 2, 6, 5, 1, 4, 3, 6, 2, 5, 1, 4, 3, 6, 5, 2, 1, 4, 3, 5, 6, 2, 1, 4, 3, 5, 2, 6, 1, 4, 3, 5, 2, 1, 6, 4, 3, 5, 2, 1, 4, 6, 3, 5, 2, 1, 4, 3, 6, 5, 1, 2, 4, 3, 6, 1, 5, 2, 4, 3, 6, 1, 2, 5, 4, 3, 6, 1, 2, 4, 5, 3, 6, 1, 2, 4, 3, 5, 6, 1, 2, 4, 3, 6, 5, 1, 4, 2, 3, 5, 6, 1, 4, 2, 3, 5, 1, 6, 4, 2, 3, 5, 1, 4, 6, 2, 3, 5, 1, 4, 2, 6, 3, 5, 1, 4, 2, 3, 6, 5, 1, 4, 3, 2, 6, 5, 4, 1, 3, 6, 2, 5, 4, 1, 3, 6, 5, 2, 4, 1, 3, 5, 6, 2, 4, 1, 3, 5, 2, 6, 4, 1, 3, 5, 2, 4, 6, 1, 3, 5, 2, 4, 1, 6, 3, 5, 2, 4, 1, 3, 6, 5, 4, 2, 1, 3, 6, 5, 4, 1, 2, 3];
const INDICES1: [usize; 1] = [0];
const INDICES2: [usize; 2] = [0, 52];
const INDICES3: [usize; 6] = [0, 29, 52, 260, 179, 295];
const INDICES4: [usize; 24] = [0, 740, 555, 531, 775, 485, 406, 705, 260, 65, 827, 194, 561, 232, 619, 625, 101, 439, 137, 172, 364, 329, 178, 323];
const INDICES5: [usize; 120] = [0, 144, 763, 757, 115, 751, 642, 607, 531, 525, 841, 519, 775, 245, 485, 712, 280, 681, 86, 745, 548, 513, 344, 687, 406, 400, 705, 382, 394, 388, 266, 330, 65, 7, 789, 151, 827, 376, 194, 188, 38, 217, 423, 698, 224, 122, 820, 211, 613, 578, 238, 273, 572, 337, 619, 584, 625, 631, 590, 596, 101, 72, 468, 462, 14, 456, 566, 796, 726, 848, 158, 450, 137, 108, 491, 834, 79, 675, 364, 370, 329, 782, 44, 223, 317, 311, 323, 474, 305, 719, 21, 27, 50, 258, 299, 293, 57, 739, 554, 542, 774, 809, 417, 704, 259, 93, 826, 205, 560, 231, 653, 659, 129, 444, 165, 171, 861, 351, 177, 502];
const INDICES6: [usize; 720] = [0, 58, 144, 138, 23, 167, 763, 769, 757, 614, 562, 649, 115, 109, 751, 579, 103, 319, 17, 161, 302, 180, 132, 499, 642, 555, 607, 492, 29, 173, 531, 537, 525, 407, 419, 413, 841, 835, 519, 401, 829, 366, 35, 817, 41, 47, 823, 858, 775, 804, 245, 239, 798, 233, 485, 810, 712, 706, 694, 700, 280, 274, 681, 383, 268, 621, 792, 227, 593, 729, 262, 656, 86, 80, 745, 573, 74, 313, 548, 670, 513, 395, 372, 430, 344, 338, 687, 389, 332, 586, 68, 197, 628, 436, 326, 471, 11, 155, 186, 215, 126, 209, 635, 600, 460, 454, 852, 448, 786, 221, 478, 723, 256, 291, 97, 203, 663, 442, 355, 506, 406, 412, 400, 365, 52, 863, 705, 734, 382, 620, 728, 655, 394, 429, 388, 585, 435, 470, 453, 447, 722, 296, 441, 505, 266, 260, 330, 359, 289, 353, 65, 94, 7, 1, 88, 59, 789, 783, 151, 145, 777, 139, 283, 347, 82, 24, 806, 168, 827, 856, 376, 626, 850, 661, 194, 200, 188, 764, 741, 770, 38, 632, 217, 758, 638, 644, 844, 667, 569, 563, 551, 557, 423, 45, 698, 591, 464, 476, 224, 253, 122, 116, 247, 110, 820, 597, 211, 752, 603, 609, 534, 482, 241, 104, 488, 494, 523, 517, 716, 679, 511, 685, 277, 341, 76, 18, 800, 162, 838, 673, 309, 303, 31, 181, 540, 691, 235, 133, 813, 175, 613, 648, 578, 318, 179, 498, 238, 232, 273, 267, 226, 261, 572, 312, 337, 331, 196, 360, 214, 208, 220, 255, 202, 354, 619, 654, 584, 324, 295, 504, 625, 660, 631, 637, 666, 550, 590, 475, 596, 602, 481, 487, 678, 684, 672, 30, 690, 812, 101, 130, 72, 66, 124, 95, 468, 439, 462, 532, 544, 538, 14, 8, 456, 526, 2, 408, 118, 89, 426, 420, 60, 414, 566, 306, 796, 790, 190, 784, 726, 720, 848, 842, 714, 836, 158, 152, 450, 520, 146, 402, 766, 778, 708, 830, 140, 367, 755, 749, 249, 284, 743, 348, 380, 386, 374, 36, 696, 818, 112, 83, 432, 42, 54, 48, 737, 772, 702, 824, 865, 859, 137, 166, 108, 102, 160, 131, 491, 172, 834, 828, 816, 822, 79, 73, 675, 377, 67, 627, 154, 125, 599, 851, 96, 662, 364, 862, 370, 434, 446, 440, 358, 352, 782, 776, 346, 805, 44, 463, 252, 246, 533, 240, 516, 545, 340, 799, 539, 234, 317, 497, 311, 195, 207, 201, 323, 503, 474, 480, 509, 689, 305, 189, 719, 713, 765, 707, 748, 742, 391, 695, 736, 701, 21, 15, 27, 33, 9, 633, 50, 457, 287, 281, 527, 275, 299, 183, 293, 682, 759, 384, 3, 639, 409, 269, 645, 616, 148, 119, 605, 845, 90, 668, 398, 427, 334, 793, 421, 228, 576, 570, 582, 588, 564, 730, 61, 552, 415, 263, 558, 651, 57, 22, 739, 567, 16, 307, 554, 28, 542, 424, 34, 40, 803, 797, 809, 693, 791, 592, 10, 191, 634, 465, 785, 477, 417, 51, 733, 727, 458, 721, 259, 288, 93, 87, 282, 81, 855, 849, 205, 746, 843, 574, 528, 715, 276, 75, 837, 314, 560, 300, 231, 225, 184, 219, 653, 294, 659, 665, 677, 671, 129, 123, 444, 514, 117, 396, 760, 248, 379, 373, 111, 431, 165, 159, 171, 815, 153, 598, 861, 451, 351, 345, 521, 339, 177, 212, 502, 508, 753, 390, 147, 604, 403, 333, 610, 581, 4, 767, 640, 535, 779, 483, 410, 709, 270, 69, 831, 198, 646, 242, 617, 623, 105, 437, 141, 489, 362, 327, 495, 321, 5, 149, 762, 756, 120, 750, 641, 606, 530, 524, 846, 518, 780, 250, 484, 717, 285, 680, 91, 744, 547, 512, 349, 686, 405, 399, 710, 381, 393, 387, 271, 335, 70, 12, 794, 156, 832, 375, 193, 187, 37, 216, 422, 697, 229, 127, 819, 210, 612, 577, 243, 278, 571, 342, 618, 583, 624, 630, 589, 595, 106, 77, 467, 461, 19, 455, 565, 801, 731, 853, 163, 449, 142, 113, 490, 839, 84, 674, 363, 369, 328, 787, 43, 222, 316, 310, 322, 473, 304, 724, 55, 26, 49, 257, 298, 292, 62, 738, 553, 541, 773, 808, 416, 703, 264, 98, 825, 204, 559, 236, 652, 658, 134, 443, 866, 170, 860, 356, 176, 501];

#[derive(PartialEq, Debug, Clone, Copy)]
pub struct SGenerator {
    order: usize,
    index: usize,
}

impl SGenerator {
    pub fn new(order: u8) -> Self {
        SGenerator { order: order as usize, index: 0 }
    }

    fn next(&mut self, indices: &'static [usize]) -> Option<OneLineSlice> {
        if self.index >= indices.len() {
            None
        }  else {
            let i = indices[self.index];
            let out = Some(OneLineSlice(&SUPER_PERM6[i..(i + self.order)]));
            self.index += 1;
            out
        }
    }
}

impl Iterator for SGenerator {
    type Item = OneLineSlice;

    fn next(&mut self) -> Option<Self::Item> {
        match self.order {
            0 => None,
            1 => self.next(&INDICES1),
            2 => self.next(&INDICES2),
            3 => self.next(&INDICES3),
            4 => self.next(&INDICES4),
            5 => self.next(&INDICES5),
            6 => self.next(&INDICES6),
            _ => unimplemented!("Slice Generator unimplemented for order > 6")
        }
    }
}